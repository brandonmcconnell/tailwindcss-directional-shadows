{"version":3,"file":"index.modern.js","sources":["../index.ts"],"sourcesContent":["import plugin from 'tailwindcss/plugin';\n\nmodule.exports = plugin(function ({ addUtilities, matchUtilities, theme }) {\n  // Directional shadows\n  ['sm', '', 'md', 'lg', 'xl', '2xl'].forEach((suffix) => {\n    ['b', 'r', 't', 'l'].forEach((dir, i) => {\n      const isEven = i % 2 === 0;\n      const baseStyleString = theme(`boxShadow.${suffix || 'DEFAULT'}`) as string;\n      const styleString = baseStyleString\n        .split(', ')\n        .map((basePart: string) =>\n          basePart\n            .split(' ')\n            .slice(0, 2)\n            .map((l, j) => (j === 1 && i > 1 ? `-${l}` : l))\n            [isEven ? 'slice' : 'reverse']()\n            .concat(basePart.split(' ').slice(2, 4))\n            .join(' ')\n        )\n        .map((p) => `${p} var(--tw-shadow-color, rgb(0 0 0 / 0.1))`)\n        .join(', ');\n      addUtilities({\n        [`.shadow-${dir}${suffix ? `-${suffix}` : ''}`]: {\n          '--tw-shadow': styleString,\n          '--tw-shadow-colored': styleString,\n          'box-shadow': 'var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)',\n        },\n      });\n    });\n  });\n  // Shadows as borders (useful with `position: sticky` on tables)\n  matchUtilities(\n    {\n      'shadow-border': (value) => ({\n        boxShadow: `inset 0 0 0 ${value} var(--tw-shadow-color, ${theme('colors.gray.200')})`,\n      }),\n      'shadow-border-x': (value) => ({\n        boxShadow: `inset ${value} 0 0 0 var(--tw-shadow-color, ${theme(\n          'colors.gray.200'\n        )}), inset -${value} 0 0 0 var(--tw-shadow-color, ${theme('colors.gray.200')})`,\n      }),\n      'shadow-border-y': (value) => ({\n        boxShadow: `inset 0 ${value} 0 0 var(--tw-shadow-color, ${theme(\n          'colors.gray.200'\n        )}), inset 0 -${value} 0 0 var(--tw-shadow-color, ${theme('colors.gray.200')})`,\n      }),\n      'shadow-border-t': (value) => ({\n        boxShadow: `inset 0 ${value} 0 0 var(--tw-shadow-color, ${theme('colors.gray.200')})`,\n      }),\n      'shadow-border-b': (value) => ({\n        boxShadow: `inset 0 -${value} 0 0 var(--tw-shadow-color, ${theme('colors.gray.200')})`,\n      }),\n      'shadow-border-l': (value) => ({\n        boxShadow: `inset ${value} 0 0 0 var(--tw-shadow-color, ${theme('colors.gray.200')})`,\n      }),\n      'shadow-border-r': (value) => ({\n        boxShadow: `inset -${value} 0 0 0 var(--tw-shadow-color, ${theme('colors.gray.200')})`,\n      }),\n    },\n    { values: theme('borderWidth') }\n  );\n});\n"],"names":["module","exports","plugin","addUtilities","matchUtilities","theme","forEach","suffix","dir","i","isEven","styleString","split","map","basePart","slice","l","j","concat","join","p","value","boxShadow","values"],"mappings":"kCAEAA,OAAOC,QAAUC,EAAO,UAAUC,aAAEA,EAAYC,eAAEA,EAAcC,MAAEA,IAEhE,CAAC,KAAM,GAAI,KAAM,KAAM,KAAM,OAAOC,QAASC,IAC3C,CAAC,IAAK,IAAK,IAAK,KAAKD,QAAQ,CAACE,EAAKC,KACjC,MAAMC,EAASD,EAAI,GAAM,EAEnBE,EADkBN,EAAM,aAAaE,GAAU,aAElDK,MAAM,MACNC,IAAKC,GACJA,EACGF,MAAM,KACNG,MAAM,EAAG,GACTF,IAAI,CAACG,EAAGC,IAAa,IAANA,GAAWR,EAAI,EAAQ,IAAAO,IAAMA,GAC5CN,EAAS,QAAU,aACnBQ,OAAOJ,EAASF,MAAM,KAAKG,MAAM,EAAG,IACpCI,KAAK,MAETN,IAAKO,GAAM,GAAGA,8CACdD,KAAK,MACRhB,EAAa,CACX,YAAYK,IAAMD,EAAS,IAAIA,IAAW,MAAO,CAC/C,cAAeI,EACf,sBAAuBA,EACvB,aAAc,gGAEjB,EAEL,GAEAP,EACE,CACE,gBAAkBiB,IAAW,CAC3BC,yBAA0BD,4BAAgChB,EAAM,wBAElE,kBAAoBgB,IAAK,CACvBC,UAAW,SAASD,kCAAsChB,EACxD,+BACYgB,kCAAsChB,EAAM,wBAE5D,kBAAoBgB,KAClBC,UAAW,WAAWD,gCAAoChB,EACxD,iCACcgB,gCAAoChB,EAAM,wBAE5D,kBAAoBgB,IAAW,CAC7BC,qBAAsBD,gCAAoChB,EAAM,wBAElE,kBAAoBgB,IAAK,CACvBC,sBAAuBD,gCAAoChB,EAAM,wBAEnE,kBAAoBgB,IAAW,CAC7BC,mBAAoBD,kCAAsChB,EAAM,wBAElE,kBAAoBgB,KAClBC,oBAAqBD,kCAAsChB,EAAM,yBAGrE,CAAEkB,OAAQlB,EAAM,gBAEpB"}